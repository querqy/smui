# <OVERWRITE_ME>
# ~~~~~

# Database configuration
# ~~~~~ 
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
db.default.driver=com.mysql.cj.jdbc.Driver
db.default.driver=${?SMUI_DB_JDBC_DRIVER}

db.default.url="jdbc:mysql://localhost/smui?autoReconnect=true&useSSL=false"
db.default.url=${?SMUI_DB_URL}

db.default.username="smui"
db.default.username=${?SMUI_DB_USER}

db.default.password="smui"
db.default.password=${?SMUI_DB_PASSWORD}

# smui2solr script config
# WARNING: better not use spaces or tabs on path or host config as that might confuse order of script params passed to shell
smui2solr.SRC_TMP_FILE="/tmp/search-management-ui_rules-txt.tmp"
smui2solr.SRC_TMP_FILE=${?SMUI_2SOLR_SRC_TMP_FILE}

smui2solr.DST_CP_FILE_TO="/usr/bin/solr/defaultCore/conf/rules.txt"
smui2solr.DST_CP_FILE_TO=${?SMUI_2SOLR_DST_CP_FILE_TO}

smui2solr.SOLR_HOST="localhost:8983"
smui2solr.SOLR_HOST=${?SMUI_2SOLR_SOLR_HOST}

# Application Feature Toggles
# ~~~~~
toggle.ui-concept.updown-rules.combined=true
toggle.ui-concept.updown-rules.combined=${?SMUI_TOGGLE_UI_UPDOWN_COMBINED}

toggle.ui-concept.all-rules.with-solr-fields=true
toggle.ui-concept.all-rules.with-solr-fields=${?SMUI_TOGGLE_UI_WITH_SOLR_FIELDS}

toggle.rule-deployment.auto-decorate.export-hash=false
toggle.rule-deployment.auto-decorate.export-hash=${?SMUI_TOGGLE_DEPL_AUTO_DECORATE}

toggle.rule-deployment.split-decompound-rules-txt=false
toggle.rule-deployment.split-decompound-rules-txt=${?SMUI_TOGGLE_DEPL_SPLIT_DECOMPOUND}
toggle.rule-deployment.split-decompound-rules-txt-DST_CP_FILE_TO="/PATH/TO/SOLR/CORE/CONF/decompound-rules.txt"
toggle.rule-deployment.split-decompound-rules-txt-DST_CP_FILE_TO=${?SMUI_TOGGLE_DEPL_DECOMPOUND_DST}

toggle.rule-deployment.pre-live.present=false
toggle.rule-deployment.pre-live.present=${?SMUI_TOGGLE_DEPL_PRELIVE}
toggle.rule-deployment.custom-script=false
toggle.rule-deployment.custom-script=${?SMUI_TOGGLE_DEPL_CUSTOM_SCRIPT}
toggle.rule-deployment.custom-script-SMUI2SOLR-SH_PATH="/PATH/TO/SOLR/CORE/CONF/alternative-smui2solr-script.sh"
toggle.rule-deployment.custom-script-SMUI2SOLR-SH_PATH=${?SMUI_TOGGLE_DEPL_CUSTOM_SCRIPT_PATH}

toggle.headline="Search Management UI"
toggle.headline=${?SMUI_HEADLINE}

# application instance specific: Play Filter / Security configuration
# ~~~~~
play.http.secret.key="generated application secret"
play.http.secret.key=${?SMUI_PLAY_APPLICATION_SECRET}

# Authentication (technical application behaviour)
# ~~~~~

# For Basic Auth authentication, use SMUI's BasicAuthAuthenticatedAction (like in the example below):
# smui.authAction="controllers.auth.BasicAuthAuthenticatedAction"
smui.BasicAuthAuthenticatedAction.user="smui_user"
smui.BasicAuthAuthenticatedAction.user=${?SMUI_BASIC_AUTH_USER}
smui.BasicAuthAuthenticatedAction.pass="smui_pass"
smui.BasicAuthAuthenticatedAction.pass=${?SMUI_BASIC_AUTH_PASS}

# For using no authentication, leave smui.authAction configured to scala.None
smui.authAction="scala.None"
smui.authAction=${?SMUI_AUTH_ACTION}

# Remember: You can implement your own authentication behaviour (e.g. based on LDAP / JWTs) by supplying your own AuthenticatedAction (see README.md)

# </OVERWRITE_ME>
# ~~~~~

# Application Server configuration
# ~~~~~
useSSL=false

# Caching configuration for SPA Assets (/assets/app/)
play.assets.cache."/public/app/"="no-cache"

# Play evolutions
# ~~~~~
play.evolutions.autoApply=true

# Play Filter / Security configuration
# ~~~~~
play.filters.disabled += play.filters.csrf.CSRFFilter // TODO Configure security filters correctly before production use.
play.filters.disabled += play.filters.hosts.AllowedHostsFilter
play.filters.headers.contentSecurityPolicy = null // TODO specify or remove --- play.filters.headers.contentSecurityPolicy =

# Number of database connections
# See https://github.com/brettwooldridge/HikariCP/wiki/About-Pool-Sizing
fixedConnectionPool = 9

play.db {
  prototype {
    hikaricp.minimumIdle = ${fixedConnectionPool}
    hikaricp.maximumPoolSize = ${fixedConnectionPool}
  }
}

# Job queue sized to HikariCP connection pool
database.dispatcher {
  executor = "thread-pool-executor"
  throughput = 1
  thread-pool-executor {
    fixed-pool-size = ${fixedConnectionPool}
  }
}
