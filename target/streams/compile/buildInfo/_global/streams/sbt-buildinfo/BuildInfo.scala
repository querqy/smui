package models.buildInfo

import scala.Predef._

/** This object was generated by sbt-buildinfo. */
case object BuildInfo {
  /** The value is "search-management-ui". */
  val name: String = "search-management-ui"
  /** The value is "3.14.0". */
  val version: String = "3.14.0"
  /** The value is "ab022fbc4fd03d2554ad2ce60ab9dc32b7840369". */
  val gitHash: String = "ab022fbc4fd03d2554ad2ce60ab9dc32b7840369"
  /** The value is "2022-09-16 17:00:30.823". */
  val builtAtString: String = "2022-09-16 17:00:30.823"
  /** The value is 1663347630823L. */
  val builtAtMillis: scala.Long = 1663347630823L
  override val toString: String = {
    "name: %s, version: %s, gitHash: %s, builtAtString: %s, builtAtMillis: %s".format(
      name, version, gitHash, builtAtString, builtAtMillis
    )
  }
  val toMap: Map[String, Any] = Map[String, Any](
    "name" -> name,
    "version" -> version,
    "gitHash" -> gitHash,
    "builtAtString" -> builtAtString,
    "builtAtMillis" -> builtAtMillis)

  val toJson: String = toMap.map{ i =>
    def quote(x:Any) : String = "\"" + x + "\""
    val key : String = quote(i._1)
    val value : String = i._2 match {
       case elem : Seq[_] => elem.map(quote).mkString("[", ",", "]")
       case elem : Option[_] => elem.map(quote).getOrElse("null")
       case elem => quote(elem)
    }
    s"$key : $value"
    }.mkString("{", ", ", "}")
}
